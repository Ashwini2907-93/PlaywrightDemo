import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://utility.sstglobal.net/');
  await page.getByRole('button', { name: 'Microsoft Logo Log in with' }).click();
  await page.getByLabel('Enter your email or phone').fill('ashwini-gis@sstus.net');
  await page.getByRole('button', { name: 'Next' }).click();
  await page.locator('#i0118').fill('A@sh123$');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await page.getByRole('button', { name: 'Yes' }).click();
  await page.goto('https://utility.sstglobal.net/dashboard');
  await page.getByRole('button', { name: 'Agents' }).click();
  await page.getByRole('button', { name: 'Create New Agent' }).click();
  await page.locator('input[name="agentName"]').click();
  await page.locator('input[name="agentName"]').fill('TestAgent');
  await page.locator('input[name="agentName"]').press('Tab');
  await page.locator('input[name="agentPurpose"]').fill('To Provide Medical details');
  await page.locator('input[name="agentPurpose"]').press('Tab');
  await page.locator('input[name="agentManagedIntents"]').fill('manage dose');
  await page.locator('select[name="agentPersonality"]').selectOption('Earnest and animated');
  await page.locator('input[name="agentDescription"]').click();
  await page.locator('input[name="agentDescription"]').fill('provide the instructions to user on provided instructions');
  await page.locator('input[name="agentDescription"]').press('Tab');
  await page.locator('input[name="agentSpecializedActivities"]').fill('Reading the details');
  await page.locator('div').filter({ hasText: /^Agent ToolsSelect & Search Agent Tools\.\.\.$/ }).locator('path').first().click();
  await page.locator('.css-czldi3').click();
  await page.getByText('writeToFile').click();
  await page.getByRole('radio', { name: 'Both Both' }).check();
  await page.getByLabel('Yes').check();
  await page.getByPlaceholder('Enter Pre-Instruction').click();
  await page.getByPlaceholder('Enter Pre-Instruction').fill('Testthe agent');
  await page.getByPlaceholder('Enter Pre-Instruction').press('Tab');
  await page.locator('textarea[name="instructionsToAgent"]').fill('Provide the detailed instructions');
  await page.locator('textarea[name="instructionsToAgent"]').press('Tab');
  await page.getByPlaceholder('Enter Post-Instruction').fill('Send the provided instructions to subagent');
  await page.locator('textarea[name="instructionToVaa"]').click();
  await page.locator('textarea[name="instructionToVaa"]').fill('TestAgent');
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('combobox').selectOption('gpt-4o');
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('textbox').click();
  await page.getByRole('textbox').fill('TestAgent');
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('textbox').click();
  await page.getByRole('textbox').fill('Testgeneral');
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('textbox').click();
  await page.getByRole('textbox').fill('TestProvidedInstructions');
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('textbox').click();
  await page.getByRole('textbox').fill('TestthePrescriptions');
  await page.getByRole('button', { name: 'Next' }).click();
  await page.getByRole('button', { name: 'Upload New Document' }).click();
  await page.locator('div').filter({ hasText: /^VersionDate$/ }).locator('input[type="text"]').click();
  await page.locator('div').filter({ hasText: /^VersionDate$/ }).locator('input[type="text"]').fill('1');
  await page.locator('input[type="file"]').click();
  page.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page.locator('input[type="file"]').setInputFiles('Student_KnowledgeBase.json');
  await page.locator('input[type="file"]').click();
  await page.locator('input[type="file"]').setInputFiles('DocScanner 08-Dec-2024 7-53 pm.pdf');
  await page.locator('form div').filter({ hasText: 'Description' }).getByRole('textbox').click();
  await page.locator('form div').filter({ hasText: 'Description' }).getByRole('textbox').fill('TestDiscription');
  await page.getByRole('button', { name: 'Ok' }).click();
  await page.getByRole('button', { name: 'Yes' }).click();
  await page.getByRole('button', { name: 'OK' }).click();
  await page.getByRole('dialog').getByRole('button', { name: 'Cancel' }).click();
  await page.getByRole('button', { name: 'Submit' }).click();
  await page.getByRole('button', { name: 'OK' }).click();
  await page.getByRole('button', { name: 'Submit' }).click();
  await page.getByText('Failed to save data: 1318 (').click({
    button: 'right'
  });
  await page.getByText('×Failed to save data: 1318 (').click();
  await page.locator('div').filter({ hasText: '×Failed to save data: 1318 (' }).first().click();
  await page.getByText('×Failed to save data: 1318 (').click();
  await page.getByRole('button', { name: 'OK' }).click();
  await page.locator('.border').click();
  await page.getByRole('button', { name: 'Submit' }).click();
  await page.getByRole('button', { name: 'OK' }).click();
  await page.getByRole('button', { name: 'View All' }).click();
  await page.getByText('Close').click();
  await page.getByText('Document uploaded').click();
  await page.getByText('12/20/').click();
  await page.getByRole('button', { name: 'Cancel' }).click();
  await page.getByText('Select AgentSelect AgentPolicyAgentQueryExecutorCreate New AgentAgentSub').click();
});